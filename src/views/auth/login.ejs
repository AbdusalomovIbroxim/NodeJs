<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/styles/css/user/auth.css">
</head>
<body>
    <div class="container">
        <div class="wrapper">
            <form action="/login" method="POST" id="loginForm">
              <h2>Login</h2>
                <div class="input-field">
                  <input id="email" type="text" name="email" required>
                  <label for="email">Enter your email</label>
              </div>
              <div class="input-field">
                <input id="password" type="password" name="password" required>
                <label for="password">Enter your password</label>
              </div>
              <div class="forget">
                <label for="remember">
                  <input type="checkbox" id="remember">
                  <p>Remember me</p>
                </label>
                <a href="#">Forgot password?</a>
              </div>
              <button type="submit">Log In</button>
              <div class="register">
                <p>Don't have an account? <a href="/register">Register</a></p>
              </div>
            </form>
          </div>
    </div>
</body>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const loginForm = document.getElementById('loginForm');

    if (!loginForm) {
        console.error('Login form not found');
        return;
    }

    loginForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        try {
            const response = await fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });

            if (!response.ok) {
                throw new Error('Login failed with status: ' + response.status);
            }

            const data = await response.json();
            console.log('Server response:', data);

            // После успешного логина
            if (data.token) {
                // Сохранение токена в localStorage
                localStorage.setItem('Authorization', data.token);

                // Проверка авторизации пользователя
                const authResponse = await fetch('/auth', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${data.token}` // Добавляем токен в заголовок
                    }
                });

                if (authResponse.ok) {
                      const authResponse2 = await fetch('/me', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${data.token}` // Добавляем токен в заголовок
                        }
                      });
                      if (authResponse2.ok) {
                        window.location.href = '/profile';
                      };
                        


                } else {
                    console.error('Failed to authorize user. Status:', authResponse.status);
                    // Очистите токен, если авторизация не удалась
                    localStorage.removeItem('Authorization');
                }
            } else {
                console.error('No token returned in the response');
            }
        } catch (error) {
            console.error('Error during login:', error);
        }
    });
});


</script>

</html>
