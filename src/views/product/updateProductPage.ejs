<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Product</title>
    <link rel="stylesheet" href="/plugins/bootstrap/css/bootstrap.min.css">
    <style>
        #update-form {
            padding-bottom: 100px;
        }
        .drop-zone {
            border: 2px dashed #007bff;
            border-radius: 5px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            color: #007bff;
            margin-top: 10px;
        }
        .drop-zone p {
            margin: 0;
        }
        .image-preview {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-top: 10px;
        }
        .image-preview .image-container {
            position: relative;
        }
        .image-preview img {
            max-width: 100px;
            max-height: 100px;
            border-radius: 5px;
            object-fit: cover;
        }
        .image-preview .delete-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.7);
            border: none;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: none;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }
        .image-preview .image-container:hover .delete-btn {
            display: flex;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Update Product</h1>

        <form id="update-form" action="/update-product-page/<%= product.slug %>" method="post" enctype="multipart/form-data">
            <input type="hidden" id="slug" name="slug" class="form-control" value="<%= product.slug %>" required>
            <div class="form-group mb-3">
                <label for="name" class="form-label">Product Name</label>
                <input type="text" id="name" name="name" class="form-control" value="<%= product.name %>" required>
            </div>

            <div class="form-group mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea id="description" name="description" class="form-control" rows="5" required><%= product.description %></textarea>
            </div>

            <div class="form-group mb-3">
                <label for="price" class="form-label">Price</label>
                <input type="number" step="0.01" id="price" name="price" class="form-control" value="<%= product.price %>" required>
            </div>

            <div class="form-group mb-3">
                <label for="current-image" class="form-label">Current Image</label>
                <div>
                    <img id="current-image" src="<%= product.images.length > 0 ? product.images[0].url : '/images/placeholder.png' %>" alt="Product Image" class="img-thumbnail" width="150px">
                </div>
            </div>

            <div class="image-upload mb-3">
                <label for="images" class="form-label">Product Images:</label>
                <input type="file" id="images" name="images" accept="image/*" multiple>
            </div>

            <div class="image-preview" id="imagePreview"></div>

            <div class="drop-zone" id="dropZone">
                <p>Drag & Drop or Click to Upload</p>
                <input type="file" id="dropImage" name="dropImage" accept="image/*" style="display: none;">
            </div>

            <button type="submit" class="btn btn-primary mt-4">Update Product</button>
            <a href="/admin/products" class="btn btn-secondary mt-4 ms-2">Back to Products</a>
        </form>
    </div>

    <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script>
        const dropZone = document.getElementById('dropZone');
        const dropImage = document.getElementById('dropImage');
        const imagePreview = document.getElementById('imagePreview');
        const imagesInput = document.getElementById('images');
        const updateForm = document.getElementById('update-form');

        dropZone.addEventListener('click', () => dropImage.click());

        dropImage.addEventListener('change', handleFiles);
        imagesInput.addEventListener('change', handleFiles);

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('active');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('active');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('active');
            handleFiles(e);
        });

        function handleFiles(event) {
            const files = event.target.files || event.dataTransfer.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();
                reader.onload = function(e) {
                    const container = document.createElement('div');
                    container.classList.add('image-container');
                    
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    
                    const deleteBtn = document.createElement('button');
                    deleteBtn.classList.add('delete-btn');
                    deleteBtn.innerHTML = '&times;';
                    deleteBtn.addEventListener('click', () => container.remove());

                    container.appendChild(img);
                    container.appendChild(deleteBtn);
                    imagePreview.appendChild(container);
                };
                reader.readAsDataURL(file);
            }
        }

        updateForm.addEventListener('submit', async function(event) {
            event.preventDefault();

            const formData = new FormData(updateForm);
            const token = localStorage.getItem('Authorization');

            try {
                const response = await fetch(updateForm.action, {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    },
                    body: formData
                });

                if (response.ok) {
                    alert('Product updated successfully!');
                    const result = await response.json();
                    // console.log();
                    window.location.href = '/admin';
                } else {
                    throw new Error('Failed to update product');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while updating the product');
            }
        });
    </script>
</body>
</html>
