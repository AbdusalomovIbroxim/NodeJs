<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <link rel="stylesheet" href="/styles/css/main/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"/>
    <style>
        /* Add styles for the modal */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Could be more or less, depending on screen size */
            border-radius: 5px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        .button {
            padding: 10px 20px;
            margin: 5px;
            border: none;
            border-radius: 5px;
            color: #fff;
            background-color: #007bff;
            cursor: pointer;
            font-size: 16px;
        }
        .button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    
    <%- include('../pages/navbar.ejs') %>

    <div class="container">
        <div class="card-section" id="cart-items">
            <!-- Products will be added here with JavaScript -->
        </div>
        <button id="open-modal" class="button">Order Now</button> <!-- Button to open the modal -->
    </div>
    
    <!-- The Modal -->
    <div id="order-modal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Order Summary</h2>
            <div class="card-section" id="order-summary">Your order summary will appear here.</div>
            <p id="total-amount">Total amount: $0.00</p>
            <button id="confirm-order" class="button">Confirm Order</button>
        </div>
    </div>

    <%- include('../pages/footer.ejs') %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let cartItems = [];
            let totalAmount = 0;

            async function fetchCart() {
                try {
                    const response = await fetch('/get-cart', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem('Authorization')}`
                        }
                    });

                    if (!response.ok) {
                        console.log('Ответ не OK:', response);
                        throw new Error('Ошибка при получении корзины: ответ сети не OK');
                    }

                    const data = await response.json();
                    cartItems = data.items; // Сохраняем товары глобально
                    totalAmount = 0; // Сбрасываем общую сумму

                    const container = document.querySelector('#cart-items');
                    container.innerHTML = cartItems.map(item => generateProductCardHTML(item)).join('');

                    totalAmount = cartItems.reduce((acc, item) => acc + item.Product.price * item.quantity, 0);
                    document.getElementById('total-amount').textContent = `Итоговая сумма: $${totalAmount.toFixed(2)}`;

                } catch (error) {
                    console.error('Ошибка при получении корзины:', error);
                }
            }

            async function fetchUserProfile() {
                try {
                    const response = await fetch('/me', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${localStorage.getItem('Authorization')}`
                        }
                    });

                    if (!response.ok) {
                        window.location.href = '/login';
                        return;
                    }

                    const user = await response.json();
                    fetchCart();

                } catch (error) {
                    console.error('Ошибка при получении профиля пользователя:', error);
                }
            }

            function generateProductCardHTML(item) {
                const { id, slug, images, name, price, description } = item.Product;
                const imageSrc = images.length > 0 ? images[0].url : '/images/products/placeholder.png';
                return `
                    <div class="product-card">
                        <input type="hidden" class="product-data" data-product-id="${id}">
                        <a href="/product/${slug}">
                            <img src="${imageSrc}" alt="${name} Image" onerror="this.src='/images/products/placeholder.png'">
                        </a>
                        <div class="product-info">
                            <a href="/product/${slug}">
                                <h3 class="product-name">${name}</h3>
                                <p class="product-price">$${price.toFixed(2)}</p>
                                <p class="product-description">${description}</p>
                            </a>
                            <p class="product-count">Количество: ${item.quantity}</p>
                        </div>
                    </div>
                `;
            }

            function setupEventListeners() {
                const modal = document.getElementById('order-modal');
                const btn = document.getElementById('open-modal');
                const span = document.getElementsByClassName('close')[0];
                const confirmOrderButton = document.getElementById('confirm-order');

                btn.onclick = function() {
                    const orderSummary = document.getElementById('order-summary');
                    orderSummary.innerHTML = cartItems.map(item => generateProductCardHTML(item)).join('');
                    modal.style.display = 'block';
                }

                span.onclick = function() {
                    modal.style.display = 'none';
                }

                window.onclick = function(event) {
                    if (event.target === modal) {
                        modal.style.display = 'none';
                    }
                }

                confirmOrderButton.onclick = async function() {
                    try {
                        const response = await fetch('/cart/order', {
                            method: 'POST',
                            headers: {
                                'Authorization': `Bearer ${localStorage.getItem('Authorization')}`,
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productIds: cartItems.map(item => item.Product.id) })
                        });

                        if (!response.ok) {
                            console.log('Ответ не OK:', response);
                            throw new Error('Ошибка при подтверждении заказа: ответ сети не OK');
                        }

                        alert('Заказ успешно подтвержден!');
                        modal.style.display = 'none';
                        fetchCart();
                    } catch (error) {
                        console.error('Ошибка при подтверждении заказа:', error);
                    }
                }
            }

            fetchUserProfile();
            setupEventListeners();
        });

        
    </script>
<!-- 
    <script src="/scripts/js/add-to-cart.js"></script>
    <script src="/scripts/js/del-in-cart.js"></script> -->
</body>
</html>
